formatter: "markdown table"
version: ">= 0.16.0, < 1.0.0"
header-from: ""
footer-from: ""
recursive:
  enabled: false
sections:
  hide: []
  show: []
content: |-
  # Terraform GitHub GitFlow Module

  A comprehensive, production-ready Terraform module for implementing GitFlow workflows on GitHub repositories with modern security features and idiomatic configuration.

  - Implements the GitFlow branch model (main, develop, feature, release, hotfix)
  - Applies GitHub provider v6 rulesets for branch and tag protection
  - Supports per-branch overrides for reviews, linear history and signed-commit enforcement
  - Integrates Advanced Security, secret scanning and Dependabot alerts
  - Offers optional push rules, tag protection and required workflows
  - Provisions GitHub Environments with wait timers and mandatory reviewers
  - Publishes webhooks for external automation
  - Manages repository topics declaratively

  ## Requirements

  {{ .Requirements }}

  ## Providers

  {{ .Providers }}

  ## Inputs

  {{ .Inputs }}

  ## Outputs

  {{ .Outputs }}

  ## Usage

  ### Basic Example

  ```hcl
  module "gitflow" {
    source = "drengskapur/gitflow/github"
    version = "~> 1.0"

    github_owner    = "your-org"
    repository_name = "your-repo"

    # Enable GitFlow branches
    enable_develop_branch   = true
    enable_feature_branches = true
    enable_release_branches = true
    enable_hotfix_branches  = true

    # Security features
    enable_advanced_security                = true
    enable_secret_scanning                  = true
    enable_secret_scanning_push_protection  = true
    enable_dependabot_security_updates      = true

    # Environment reviewers
    prod_env_reviewers = ["ops-team", "security-team"]
  }
  ```

  ### Advanced Configuration

  ```hcl
  module "gitflow" {
    source  = "drengskapur/gitflow/github"
    version = "~> 1.0"

    github_owner    = "your-org"
    repository_name = "your-repo"

    # Custom branch names
    main_branch_name    = "production"
    develop_branch_name = "integration"

    # Branch-specific protection overrides
    main_branch_overrides = {
      required_reviews       = 3
      require_linear_history = true
      require_signed_commits = true
      dismiss_stale_reviews  = true
    }
    develop_branch_overrides = {
      required_reviews = 2
    }

    # Status checks
    main_branch_status_checks    = ["ci/build", "security/scan"]
    develop_branch_status_checks = ["ci/build"]

    # Security & compliance
    enable_push_rules         = true
    enable_tag_protection     = true
    blocked_file_extensions   = [".pem", ".key"]
    restricted_file_paths     = ["secrets/*", "infra/prod/**"]
    required_workflows        = ["build.yml", "lint.yml"]

    # Repository topics
    manage_topics_in_terraform = true
    repository_topics          = ["terraform", "gitflow", "github"]

    # Bypass actors for emergencies
    bypass_actors = [
      {
        id   = "12345"
        type = "TEAM"
        mode = "always"
      }
    ]

    # Environments
    enable_dev_environment   = true
    enable_stage_environment = true
    enable_prod_environment  = true

    prod_env_reviewers = ["ops-team", "security-team"]

    # Webhook automation
    enable_webhook  = true
    webhook_url     = "https://automation.example.com/github"
    webhook_events  = ["push", "pull_request", "release"]
  }
  ```

  ## GitFlow Branch Structure

  This module implements the complete GitFlow workflow:

  ```
  main (production)
  ├── develop (integration)
  │   ├── feature/user-auth
  │   ├── feature/payment-system
  │   └── feature/dashboard
  ├── release/v1.2.0
  └── hotfix/v1.1.1
  ```

  ### Branch Protection Rules

  | Branch&nbsp;Type | Reviews | Signed&nbsp;Commits | Linear&nbsp;History | Status&nbsp;Checks |
  |:-------------:|:-------:|:--------------:|:--------------:|:-------------:|
  | **main**    | 2       | Required       | Required       | Strict        |
  | **develop** | 1       | Optional       | Optional       | Optional      |
  | **feature** | 0       | Optional       | Optional       | Optional      |
  | **release** | 2       | Required       | Required       | Optional      |
  | **hotfix**  | 1       | Required       | Required       | Optional      |

  ## GitHub Environments

  The module creates three deployment environments:

  - **Development**: Deploys from `develop` branch, no wait time
  - **Staging**: Deploys from `release/*` branches, 10-minute wait
  - **Production**: Deploys from `main` branch, 30-minute wait + reviewers

  ## Security Features

  - **Advanced Security**: GitHub Advanced Security features
  - **Secret Scanning**: Automatic secret detection with push protection
  - **Dependabot**: Automated security updates for dependencies
  - **Vulnerability Alerts**: Notifications for known vulnerabilities
  - **Signed Commits**: Required for production branches
  - **Code Scanning**: Integration ready for CodeQL and third-party tools

  ## Contributing

  Contributions are welcome! Please read our [Contributing Guide](CONTRIBUTING.md) for details on our code of conduct and the process for submitting pull requests.

  ## License

  This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

  ## Support

  - [Documentation](https://github.com/drengskapur/terraform-github-gitflow)
  - [Issue Tracker](https://github.com/drengskapur/terraform-github-gitflow/issues)
  - [Discussions](https://github.com/drengskapur/terraform-github-gitflow/discussions)
output:
  file: "README.md"
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    {{ .Content }}
    <!-- END_TF_DOCS -->
sort:
  enabled: true
  by: name
settings:
  anchor: true
  color: true
  default: true
  description: true
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
