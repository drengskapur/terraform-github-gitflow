name: Release

"on":
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  actions: read
  pull-requests: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install changelog dependencies
        run: |
          npm init -y
          npm install --no-save conventional-changelog-cli

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          # Generate changelog from conventional commits
          if [ -f "node_modules/.bin/conventional-changelog" ]; then
            ./node_modules/.bin/conventional-changelog -p conventionalcommits -i CHANGELOG.md -s -r 0
            echo "changelog_content<<EOF" >> $GITHUB_OUTPUT
            cat CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # Fallback to simple git log
            echo "changelog_content<<EOF" >> $GITHUB_OUTPUT
            echo "## Changes" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Commit updated changelog
        if: success()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          if [ -f "CHANGELOG.md" ] && ! git diff --quiet CHANGELOG.md; then
            # Create a new branch for the changelog update
            BRANCH_NAME="changelog-update-${{ steps.version.outputs.version }}"

            # Stash the changelog changes
            git stash push -m "changelog-updates" CHANGELOG.md

            # Checkout main branch and create new branch for PR
            git checkout main
            git checkout -b "$BRANCH_NAME"

            # Apply the stashed changelog changes
            git stash pop
            git add CHANGELOG.md
            git commit -m "docs: update CHANGELOG.md for ${{ steps.version.outputs.version }}"

            # Push the branch
            git push origin "$BRANCH_NAME"

            # Create pull request using GitHub CLI
            gh pr create \
              --title "docs: Update CHANGELOG.md for ${{ steps.version.outputs.version }}" \
              --body "Automated changelog update for release ${{ steps.version.outputs.version }}" \
              --base main \
              --head "$BRANCH_NAME"

            # Auto-merge the PR (if possible)
            gh pr merge "$BRANCH_NAME" --squash --delete-branch || echo "PR created but not auto-merged"
          else
            echo "No changes to CHANGELOG.md"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          body: ${{ steps.changelog.outputs.changelog_content }}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Release ${{ steps.version.outputs.version }}"
          tag: ${{ steps.version.outputs.version }}
