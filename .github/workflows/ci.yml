name: CI
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
      - name: Terraform Init
        run: terraform init -backend=false
      - name: Terraform Validate
        run: terraform validate
      - name: Validate Examples
        run: |
          cd examples/minimal
          terraform init -backend=false
          terraform validate
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Render terraform docs
        uses: terraform-docs/gh-actions@v1.2.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: false
      - name: Check if documentation is up to date
        run: "if git diff --exit-code README.md; then\n  echo \"Documentation is up to date\"\nelse\n  echo \"Documentation is out of date. Please run 'terraform-docs markdown . --output-file README.md'\"\n  exit 1\nfi "
