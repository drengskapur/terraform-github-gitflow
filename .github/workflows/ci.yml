name: CI

"on":
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  TERRAFORM_VERSION: "1.10.3"
  TFLINT_VERSION: "v0.54.0"

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive

      - name: Terraform Init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate

  lint:
    name: Lint
    runs-on: ubuntu-24.04
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cache TFLint plugins
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ runner.os }}-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint --format=compact

  test:
    name: Test Examples
    runs-on: ubuntu-24.04
    needs:
      - validate
      - lint
    permissions:
      contents: read
    strategy:
      matrix:
        example:
          - minimal
          - complete
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup example variables
        working-directory: examples/${{ matrix.example }}
        run: |
          if [ -f terraform.tfvars.example ]; then
            cp terraform.tfvars.example terraform.tfvars
          fi

      - name: Terraform Init
        working-directory: examples/${{ matrix.example }}
        run: terraform init -backend=false

      - name: Terraform Format Check
        working-directory: examples/${{ matrix.example }}
        run: terraform fmt -check -diff

      - name: Terraform Validate
        working-directory: examples/${{ matrix.example }}
        run: terraform validate -no-color

  ci-success:
    name: CI Success
    runs-on: ubuntu-24.04
    needs: [validate, lint, test]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.validate.result }}" != "success" ]]; then
            echo "❌ Validation failed"
            exit 1
          fi
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Linting failed"
            exit 1
          fi
          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "❌ Testing failed"
            exit 1
          fi
          echo "✅ All CI checks passed"
